{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mehbo\\\\Downloads\\\\frontend-developer-test-task\\\\src\\\\components\\\\genre\\\\Genre.js\";\nimport DropdownHOC from \"../../HOC's/dropdownHOC\";\nimport Dropdown from \"../dropdown/Dropdown\";\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@mui/icons-material/KeyboardArrowUp\";\nimport { Fragment } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Genre(props) {\n  var genereList = [\"Any Genre\", \"Action\", \"Comedy\", \"Drama\", \"Thriller\"];\n  var isGenreVisible = props.isGenreVisible,\n    onGenreOpen = props.onGenreOpen,\n    handleItemSelected = props.handleItemSelected,\n    selected = props.selected;\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropHeader\",\n      onClick: onGenreOpen,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Genre\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), isGenreVisible ? /*#__PURE__*/_jsxDEV(KeyboardArrowUpIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 27\n      }, this) : /*#__PURE__*/_jsxDEV(KeyboardArrowDownIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 53\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), isGenreVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdownContent genreContent\",\n      children: /*#__PURE__*/_jsxDEV(Dropdown, {\n        content: genereList,\n        handleItemSelected: handleItemSelected,\n        selected: selected,\n        type: \"genre\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_c = Genre;\nexport default _c2 = DropdownHOC(Genre);\nvar _c, _c2;\n$RefreshReg$(_c, \"Genre\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["DropdownHOC","Dropdown","KeyboardArrowDownIcon","KeyboardArrowUpIcon","Fragment","jsxDEV","_jsxDEV","Genre","props","genereList","isGenreVisible","onGenreOpen","handleItemSelected","selected","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","content","type","_c","_c2","$RefreshReg$"],"sources":["C:/Users/mehbo/Downloads/frontend-developer-test-task/src/components/genre/Genre.js"],"sourcesContent":["import DropdownHOC from \"../../HOC's/dropdownHOC\";\r\nimport Dropdown from \"../dropdown/Dropdown\";\r\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\r\nimport KeyboardArrowUpIcon from \"@mui/icons-material/KeyboardArrowUp\";\r\nimport { Fragment } from \"react\";\r\n\r\nfunction Genre(props) {\r\n  const genereList = [\"Any Genre\", \"Action\", \"Comedy\", \"Drama\", \"Thriller\"];\r\n  const { isGenreVisible, onGenreOpen, handleItemSelected, selected } = props;\r\n  return (\r\n    <Fragment>\r\n      <div className=\"dropHeader\" onClick={onGenreOpen}>\r\n        <p>Genre</p>\r\n        {isGenreVisible ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n      </div>\r\n      {isGenreVisible && (\r\n        <div className=\"dropdownContent genreContent\">\r\n          <Dropdown\r\n            content={genereList}\r\n            handleItemSelected={handleItemSelected}\r\n            selected={selected}\r\n            type=\"genre\"\r\n          />\r\n        </div>\r\n      )}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default DropdownHOC(Genre);\r\n"],"mappings":";AAAA,OAAOA,WAAW,MAAM,yBAAyB;AACjD,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,qBAAqB,MAAM,uCAAuC;AACzE,OAAOC,mBAAmB,MAAM,qCAAqC;AACrE,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,KAAKA,CAACC,KAAK,EAAE;EACpB,IAAMC,UAAU,GAAG,CAAC,WAAW,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,UAAU,CAAC;EACzE,IAAQC,cAAc,GAAgDF,KAAK,CAAnEE,cAAc;IAAEC,WAAW,GAAmCH,KAAK,CAAnDG,WAAW;IAAEC,kBAAkB,GAAeJ,KAAK,CAAtCI,kBAAkB;IAAEC,QAAQ,GAAKL,KAAK,CAAlBK,QAAQ;EACjE,oBACEP,OAAA,CAACF,QAAQ;IAAAU,QAAA,gBACPR,OAAA;MAAKS,SAAS,EAAC,YAAY;MAACC,OAAO,EAAEL,WAAY;MAAAG,QAAA,gBAC/CR,OAAA;QAAAQ,QAAA,EAAG;MAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EACXV,cAAc,gBAAGJ,OAAA,CAACH,mBAAmB;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAAGd,OAAA,CAACJ,qBAAqB;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClE,CAAC,EACLV,cAAc,iBACbJ,OAAA;MAAKS,SAAS,EAAC,8BAA8B;MAAAD,QAAA,eAC3CR,OAAA,CAACL,QAAQ;QACPoB,OAAO,EAAEZ,UAAW;QACpBG,kBAAkB,EAAEA,kBAAmB;QACvCC,QAAQ,EAAEA,QAAS;QACnBS,IAAI,EAAC;MAAO;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEf;AAACG,EAAA,GArBQhB,KAAK;AAuBd,eAAAiB,GAAA,GAAexB,WAAW,CAACO,KAAK,CAAC;AAAC,IAAAgB,EAAA,EAAAC,GAAA;AAAAC,YAAA,CAAAF,EAAA;AAAAE,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}